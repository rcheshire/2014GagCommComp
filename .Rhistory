age.dv.ss$Total
age.dv.ss
age.dv$tmp=1
age.dv.ss=xtabs(tmp~year+state,data=age.dv)
age.dv.ss=as.data.frame.matrix(age.dv.ss)
age.dv.ss$GaFL=age.dv.ss[,2]+age.dv.ss[,3]
age.dv.ss=age.dv.ss[,c(-1,-2,-3)]
age.dv.ss$Total=rowSums(age.dv.ss)
table6=xtable(age.dv.ss,digits=0)
age.dv$tmp=1
age.dv.ss=xtabs(tmp~year+state,data=age.dv)
age.dv.ss=as.data.frame.matrix(age.dv.ss)
age.dv.ss
age.dv.ss=age.dv.ss[,c(2,3,1)]
age.dv.ss
age.dv.ss$Total=rowSums(age.dv.ss)
table6=xtable(age.dv.ss,digits=0)
print(table6,type="html")
dv.ss.trim=as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,]))
dv.norm.a.unw.trim2=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.acomp.norm.w.trim2=dv.acomp.norm.w.trim[as.numeric(rownames(dv.acomp.norm.w.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.norm.a.unw.trim2=rbind(dv.ss.trim,dv.norm.a.unw.trim2)
dv.ss.trim=as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,]))
dv.norm.a.unw.trim2=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.acomp.norm.w.trim2=dv.acomp.norm.w.trim[as.numeric(rownames(dv.acomp.norm.w.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dim(dv.norm.a.unw.trim2)
length(dv.ss.trim)
dv.ss.trim
dv.norm.a.unw.trim2=cbind(dv.ss.trim,dv.norm.a.unw.trim2)
dv.norm.a.unw.trim2
age.dv.ss
dv.ss.trim=rownames(age.dv.ss[as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])))
dv.ss.trim=age.dv.ss$Total[as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,]))
)
dv.ss.trim
dv.ss.trim=age.dv.ss$Total[age.dv.ss$Total>30]
dv.ss.trim
cull.dv.ages=30
dv.ss.trim=age.dv.ss$Total[age.dv.ss$Total>30]
dv.norm.a.unw.trim2=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.acomp.norm.w.trim2=dv.acomp.norm.w.trim[as.numeric(rownames(dv.acomp.norm.w.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.norm.a.unw.trim2=cbind(dv.ss.trim,dv.norm.a.unw.trim2)
dv.norm.a.unw.trim2
cull.dv.ages=30
dv.age.n=age.dv.ss$Total[age.dv.ss$Total>30]
dv.norm.a.unw.trim2=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.acomp.norm.w.trim2=dv.acomp.norm.w.trim[as.numeric(rownames(dv.acomp.norm.w.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>30,])),]
dv.norm.a.unw.trim2=cbind(dv.age.n,dv.norm.a.unw.trim2)
dv.norm.a.unw.trim2
dv.acomp.norm.w.trim2
cull.hl.ages=30
hl.age.n=age.hl.ss$Total[age.hl.ss$Total>cull.hl.ages]
acomp.hl.w.norm2=acomp.hl.w.norm[as.numeric(rownames(acomp.hl.w.norm))%in%as.numeric(rownames(age.hl.ss[age.hl.ss$Total>cull.hl.ages,])),]
hl.age.acomp.norm2=hl.age.acomp.norm[as.numeric(rownames(hl.age.acomp.norm))%in%as.numeric(rownames(age.hl.ss[age.hl.ss$Total>cull.hl.ages,])),]
acomp.hl.w.norm3=cbind(hl.age.n,acomp.hl.w.norm2)
acomp.hl.w.norm3
windows(record=TRUE,width=7,height=10)
par(mar=c(1.5, 2, 1, 1) + 0.1,oma=c(4,4,0,0))
agebins=as.numeric(colnames(acomp.hl.w.norm2))
year=as.numeric(rownames(acomp.hl.w.norm2))
for(i in 1:dim(dv.acomp.norm.w.trim2)[1]){
plot(agebins,dv.acomp.norm.w.trim2[i,],type='n',ylim=c(0,max(dv.acomp.norm.w.trim2)),ylab='',xlab='Age')
text(5,.5,paste(year[i],'Handline',sep='-'),cex=1.2)
lines(agebins,dv.acomp.norm.w.trim2[i,],lwd=2,lty=3,col='darkorange')
lines(agebins,dv.acomp.norm.w.trim2[i,],lwd=2,lty=1,col='blue')
legend('topright',lty=c(3,1),lwd=c(2,2),col=c('darkorange','blue'),legend=c('unweighted','weighted'),cex=1.2,bty='n')
}
windows(record=TRUE,width=7,height=10)
par(mar=c(1.5, 2, 1, 1) + 0.1,oma=c(4,4,0,0))
agebins=as.numeric(colnames(dv.acomp.norm.w.trim2))
year=as.numeric(rownames(dv.acomp.norm.w.trim2))
for(i in 1:dim(dv.acomp.norm.w.trim2)[1]){
plot(agebins,dv.acomp.norm.w.trim2[i,],type='n',ylim=c(0,max(dv.acomp.norm.w.trim2)),ylab='',xlab='Age')
text(5,.5,paste(year[i],'Handline',sep='-'),cex=1.2)
lines(agebins,dv.acomp.norm.w.trim2[i,],lwd=2,lty=3,col='darkorange')
lines(agebins,dv.acomp.norm.w.trim2[i,],lwd=2,lty=1,col='blue')
legend('topright',lty=c(3,1),lwd=c(2,2),col=c('darkorange','blue'),legend=c('unweighted','weighted'),cex=1.2,bty='n')
}
gafl.dv.a.w
gafl.dv.a.w=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
#trim state-specific comps to match final
gafl.dv.a.w.trim=gafl.dv.a.w[as.numeric(rownames(gafl.dv.a.w))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
gafl.dv.a.w.trim
#trim state-specific comps to match final
nc.dv.a.w.trim=nc.dv.a.w[as.numeric(rownames(nc.dv.a.w))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
sc.dv.a.w.trim=sc.dv.a.w[as.numeric(rownames(sc.dv.a.w))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
gafl.dv.a.w.trim=gafl.dv.a.w[as.numeric(rownames(gafl.dv.a.w))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
windows(record=TRUE,width=7,height=10)
par(mar=c(1.5, 2, 1, 1) + 0.1,oma=c(4,4,0,0))
agebins=as.numeric(colnames(dv.acomp.norm.w.trim2))
year=as.numeric(rownames(dv.acomp.norm.w.trim2))
for(i in 1:dim(dv.acomp.norm.w.trim2)[1]){
plot(agebins,dv.acomp.norm.w.trim2[i,],type='n',ylim=c(0,max(dv.acomp.norm.w.trim2)),ylab='',xlab='Age')
text(5,.5,paste(year[i],'Diving',sep='-'),cex=1.2)
lines(agebins,dv.norm.a.unw.trim2[i,],lwd=2,lty=3)
lines(agebins,dv.acomp.norm.w.trim2[i,],lwd=2,lty=1)
lines(agebins,nc.dv.a.w.trim[i,],lty=3,lwd=2,col="green")
lines(agebins,sc.dv.a.w.trim[i,],lty=3,lwd=2,col="blue")
lines(agebins,gafl.dv.a.w.trim[i,],lty=3,lwd=2,col="orange")
#lines(agebins,fl.dv.w.trim[i,],lty=3,lwd=2,col="red")
legend('topright',lty=c(1,3,3,3,3),lwd=c(2,2,2,2,2),col=c('black','black','green','blue','orange'),legend=c('weighted','unweighted','NC','SC','GAFL'))
legend('topright',lty=c(3,1),lwd=c(2,2),col=c('darkorange','blue'),legend=c('unweighted','weighted'),cex=1.2,bty='n')
}
agebins
plot(agebins,dv.acomp.norm.w.trim2[1,],type='n',ylim=c(0,max(dv.acomp.norm.w.trim2)),ylab='',xlab='Age')
text(5,.5,paste(year[1],'Diving',sep='-'),cex=1.2)
lines(agebins,dv.norm.a.unw.trim2[1,],lwd=2,lty=3)
dv.norm.a.unw.trim2
cull.dv.ages=30
dv.age.n=age.dv.ss$Total[age.dv.ss$Total>cull.dv.ages]
dv.norm.a.unw.trim2=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
dv.norm.a.unw.trim2
windows(record=TRUE,width=7,height=10)
par(mar=c(1.5, 2, 1, 1) + 0.1,oma=c(4,4,0,0))
agebins=as.numeric(colnames(dv.acomp.norm.w.trim2))
year=as.numeric(rownames(dv.acomp.norm.w.trim2))
for(i in 1:dim(dv.acomp.norm.w.trim2)[1]){
plot(agebins,dv.acomp.norm.w.trim2[i,],type='n',ylim=c(0,max(dv.acomp.norm.w.trim2)),ylab='',xlab='Age')
text(5,.5,paste(year[i],'Diving',sep='-'),cex=1.2)
lines(agebins,dv.norm.a.unw.trim2[i,],lwd=2,lty=3)
lines(agebins,dv.acomp.norm.w.trim2[i,],lwd=2,lty=1)
lines(agebins,nc.dv.a.w.trim[i,],lty=3,lwd=2,col="green")
lines(agebins,sc.dv.a.w.trim[i,],lty=3,lwd=2,col="blue")
lines(agebins,gafl.dv.a.w.trim[i,],lty=3,lwd=2,col="orange")
legend('topright',lty=c(1,3,3,3,3),lwd=c(2,2,2,2,2),col=c('black','black','green','blue','orange'),legend=c('weighted','unweighted','NC','SC','GAFL'))
legend('topright',lty=c(3,1),lwd=c(2,2),col=c('darkorange','blue'),legend=c('unweighted','weighted'),cex=1.2,bty='n')
}
dim(nc.hl.w)
dim(sc.hl.w)
dim(gafl.hl.w)
dim(nc.dv.w)
dim(sc.dv.w)
dim(gafl.dv.w)
**Figure 3.**  Commercial handline weighted Age composition.  (1979-1982 unweighted due to lack of length data, years with greater than 46 fish)
######################################################################
# gag 2014 update assessment length composition
# R. Cheshire 1/21/2014,  last edit 2/4/2014
#######warning, to do: modify pooling  over upper and lower values
######################################################################
######code to add years to comps....insert later
# rnames=as.numeric(rownames(hl.norm.unw))
# hl.norm.unw=cbind(rnames,hl.norm.unw)
# colnames(hl.norm.unw)[1]='year'
setwd("W:\\SEDAR\\Updates2014\\Gag\\Comps\\Commercial")
#W:\SEDAR\Updates2014\Gag\Comps\Commercial\2014GagCommLcomp\2014GagCommComp
require(doBy)
require(xtable)
library(reshape2)
# define sample size cutoff (state-specific sample size cutoff for weighting comps)
st.cutoff=0
yr.cutoff=100  #annual number of fish ---not implemented yet
#import data sets
tip=read.csv('W:/SEDAR/Updates2014/Gag/Comps/Commercial/gag_tip_sa.csv',header=TRUE)
hl.state.land=read.csv(file='W:/SEDAR/Updates2014/Gag/Comps/Commercial/hl.stateppt.csv',header=TRUE)#temporary until landings are received
dv.state.land=read.csv(file='W:/SEDAR/Updates2014/Gag/Comps/Commercial/dv.stateppt.csv',header=TRUE)#temporary until landings are received
#remove unwanted columns
tip=tip[,c(1,3,7,8,9,11)]
#rename variables
names(tip)=c('state','year','lentype','length','num','gear')
#remove records without units defined
tip=tip[tip$lentype!="",]
#convert to total length
sl=function(x){x=1.1908*x}  # conversions from sedar 10 workbook
fl=function(x){x=1.0341*x}
tip$tlmm[tip$lentype=="FORK LENGTH"]=fl(tip$length)
tip$tlmm[tip$lentype=="STANDARD LENGTH"]=sl(tip$length[tip$lentype=="STANDARD LENGTH"])
tip$tlmm[tip$lentype=="TOTAL LENGTH"]=tip$length[tip$lentype=="TOTAL LENGTH"]
#convert to 1 cm bins
rnd = function(x) trunc(x+0.5) #define round function (r's version of round is not typical US version)
tip$tlcm=rnd(tip$tlmm/10)
tip=tip[tip$tlcm<=145,] #as defined in SEDAR10-DW-14, removes 3 records
tip=tip[tip$tlcm>29.4,] #as defined by SEDAR10_SAR1_SA_Gag, removes 15 records
#redefine pooled values
tip$tlcm[tip$tlcm<29]=29 #lower
tip$tlcm[tip$tlcm>122]=122 #upper
tip=tip[tip$year<2013,]
#combine georgia and florida
tip$state=as.character(tip$state)
tip$state[tip$state=="GA"]="GAFL"
tip$state[tip$state=="FL"]="GAFL"
#define gears
gears=levels(as.factor(tip$gear))
#the following gear index values need to be updated for each species/data set
gear_hl=gears[c(4,5,6,7,9,12,13,14,15)]
#[1] "LINES HAND"                    "LINES LONG SET WITH HOOKS"
#[3] "LINES LONG, REEF FISH"         "LINES POWER TROLL OTHER"
#[5] "OTTER TRAWL BOTTOM, FISH"      "REEL, ELECTRIC OR HYDRAULIC"
#[7] "REEL, MANUAL"                  "ROD AND REEL"
#[9] "ROD AND REEL, ELECTRIC (HAND)"
gear_dv=gears[c(2,16)]  #[1] "BY HAND, DIVING GEAR" "SPEARS"
#gears not included: vertical buoy gear, cast nets, not coded,
#     pots and traps (fish), pots and traps (include,
#split data to gears
tip.hl=tip[tip$gear%in%gear_hl,]
tip.dv=tip[tip$gear%in%gear_dv,]
#cleanup
tip.hl=tip.hl[,c(1,2,5,8)]
tip.dv=tip.dv[,c(1,2,5,8)]
#convert to 3cm bins from 29 to 122 cm #############trickery
lenbins=seq(29,122,by=3)
tip.hl$tl3cm[tip.hl$tlcm%in%lenbins]=tip.hl$tlcm[tip.hl$tlcm%in%lenbins]
temp.tl=tip.hl$tlcm+1
tip.hl$tl3cm[temp.tl%in%lenbins]=temp.tl[temp.tl%in%lenbins]
temp.tl=tip.hl$tlcm-1
tip.hl$tl3cm[temp.tl%in%lenbins]=temp.tl[temp.tl%in%lenbins]
#diving
tip.dv$tl3cm[tip.dv$tlcm%in%lenbins]=tip.dv$tlcm[tip.dv$tlcm%in%lenbins]
temp.tl=tip.dv$tlcm+1
tip.dv$tl3cm[temp.tl%in%lenbins]=temp.tl[temp.tl%in%lenbins]
temp.tl=tip.dv$tlcm-1
tip.dv$tl3cm[temp.tl%in%lenbins]=temp.tl[temp.tl%in%lenbins]
# add zeros for missing combinations of year, state, and length bin
#handline
x=levels(as.factor(tip.hl$state))
y=min(tip.hl$year):max(tip.hl$year)
z=seq(min(tip.hl$tl3cm,na.rm=TRUE),max(tip.hl$tl3cm,na.rm=TRUE),by=3)
a=expand.grid(x=x,y=y,z=z)
colnames(a)=c('state','year','tl3cm')
tip.hl=merge(a,tip.hl,by=c('state','year','tl3cm'),all=TRUE)
tip.hl$num[is.na(tip.hl$num)==TRUE] = 0
#diving
x=levels(as.factor(tip.dv$state))
y=as.numeric(levels(as.factor(tip.dv$year)))
z=seq(29,122,by=3)   #hardcode max and min to match handline
a=expand.grid(x=x,y=y,z=z)
colnames(a)=c('state','year','tl3cm')
tip.dv=merge(a,tip.dv,by=c('state','year','tl3cm'),all=TRUE)
tip.dv$num[is.na(tip.dv$num)==TRUE] = 0
###add sample size tables here
############ Handline #############
############################
###begin unweighted length comp - handline
hl.unw=summaryBy(num~year+tl3cm,data=tip.hl,FUN=sum)
hl.unw.tab=xtabs(num.sum~year+tl3cm,data=hl.unw)
hl.nfish=rowSums(hl.unw.tab)+0.0000001
for(i in 1:length(hl.nfish)){
if (hl.nfish[i]>st.cutoff){hl.nfish[i]=hl.nfish[i]
} else{hl.nfish[i]=0.0000001;hl.unw.tab[i,]=0}
}
hl.norm.unw=hl.unw.tab/hl.nfish
############ Diving #############
############################
###begin unweighted length comp - diving
dv.unw=summaryBy(num~year+tl3cm,data=tip.dv,FUN=sum)
dv.unw.tab=xtabs(num.sum~year+tl3cm,data=dv.unw)
dv.nfish=rowSums(dv.unw.tab)+0.0000001
for(i in 1:length(dv.nfish)){
if (dv.nfish[i]>st.cutoff){dv.nfish[i]=dv.nfish[i]
} else{dv.nfish[i]=0.0000001;dv.unw.tab[i,]=0}
}
dv.norm.unw=dv.unw.tab/dv.nfish
############# STATE-SPECIFIC COMPS
#north carolina handline
nc.hl.unw=summaryBy(num~year+tl3cm,data=tip.hl[tip.hl$state=='NC',],FUN=sum)
nc.hl.unw.tab=xtabs(num.sum~year+tl3cm,data=nc.hl.unw)
nc.hl.unw.tab=as.data.frame.matrix(nc.hl.unw.tab)
nc.hl.nfish=rowSums(nc.hl.unw.tab)
for(i in 1:length(nc.hl.nfish)){
if (nc.hl.nfish[i]>st.cutoff){nc.hl.nfish[i]=nc.hl.nfish[i]
} else{nc.hl.nfish[i]=0;nc.hl.unw.tab[i,]=0}
}
nc.hl.norm.unw=nc.hl.unw.tab/(nc.hl.nfish+0.00000001)
nc.hl.w=nc.hl.norm.unw*hl.state.land[,2]
#north carolina diving
nc.dv.unw=summaryBy(num~year+tl3cm,data=tip.dv[tip.dv$state=='NC',],FUN=sum)
nc.dv.unw.tab=xtabs(num.sum~year+tl3cm,data=nc.dv.unw)
nc.dv.unw.tab=as.data.frame.matrix(nc.dv.unw.tab)
nc.dv.nfish=rowSums(nc.dv.unw.tab)
for(i in 1:length(nc.dv.nfish)){
if (nc.dv.nfish[i]>st.cutoff){nc.dv.nfish[i]=nc.dv.nfish[i]
} else{nc.dv.nfish[i]=0;nc.dv.unw.tab[i,]=0}
}
nc.dv.norm.unw=nc.dv.unw.tab/(nc.dv.nfish+0.00000001)
nc.dv.w=nc.dv.norm.unw*dv.state.land[,2]
#south carolina handline
sc.hl.unw=summaryBy(num~year+tl3cm,data=tip.hl[tip.hl$state=='SC',],FUN=sum)
sc.hl.unw.tab=xtabs(num.sum~year+tl3cm,data=sc.hl.unw)
sc.hl.unw.tab=as.data.frame.matrix(sc.hl.unw.tab)
sc.hl.nfish=rowSums(sc.hl.unw.tab)
for(i in 1:length(sc.hl.nfish)){
if (sc.hl.nfish[i]>st.cutoff){sc.hl.nfish[i]=sc.hl.nfish[i]
} else{sc.hl.nfish[i]=0;sc.hl.unw.tab[i,]=0}
}
sc.hl.norm.unw=sc.hl.unw.tab/(sc.hl.nfish+0.00000001)
sc.hl.w=sc.hl.norm.unw*hl.state.land[,3]
#south carolina diving
sc.dv.unw=summaryBy(num~year+tl3cm,data=tip.dv[tip.dv$state=='SC',],FUN=sum)
sc.dv.unw.tab=xtabs(num.sum~year+tl3cm,data=sc.dv.unw)
sc.dv.unw.tab=as.data.frame.matrix(sc.dv.unw.tab)
sc.dv.nfish=rowSums(sc.dv.unw.tab)
for(i in 1:length(sc.dv.nfish)){
if (sc.dv.nfish[i]>st.cutoff){sc.dv.nfish[i]=sc.dv.nfish[i]
} else{sc.dv.nfish[i]=0;sc.dv.unw.tab[i,]=0}
}
sc.dv.norm.unw=sc.dv.unw.tab/(sc.dv.nfish+0.00000001)
sc.dv.w=sc.dv.norm.unw*dv.state.land[,3]
#georgia + florida handline (no data after 2005)
gafl.hl.unw=summaryBy(num~year+tl3cm,data=tip.hl[tip.hl$state=='GAFL',],FUN=sum)
gafl.hl.unw.tab=xtabs(num.sum~year+tl3cm,data=gafl.hl.unw)
gafl.hl.unw.tab=as.data.frame.matrix(gafl.hl.unw.tab)
gafl.hl.nfish=rowSums(gafl.hl.unw.tab)
for(i in 1:length(gafl.hl.nfish)){
if (gafl.hl.nfish[i]>st.cutoff){gafl.hl.nfish[i]=gafl.hl.nfish[i]
} else{gafl.hl.nfish[i]=0;gafl.hl.unw.tab[i,]=0}
}
gafl.hl.norm.unw=gafl.hl.unw.tab/(gafl.hl.nfish+0.00000001)
gafl.hl.w=gafl.hl.norm.unw*hl.state.land[,4]
#georgia diving
gafl.dv.unw=summaryBy(num~year+tl3cm,data=tip.dv[tip.dv$state=='GAFL',],FUN=sum)
gafl.dv.unw.tab=xtabs(num.sum~year+tl3cm,data=gafl.dv.unw)
gafl.dv.unw.tab=as.data.frame.matrix(gafl.dv.unw.tab)
gafl.dv.nfish=rowSums(gafl.dv.unw.tab)
for(i in 1:length(gafl.dv.nfish)){
if (gafl.dv.nfish[i]>st.cutoff){gafl.dv.nfish[i]=gafl.dv.nfish[i]
} else{gafl.dv.nfish[i]=0;gafl.dv.unw.tab[i,]=0}
}
gafl.dv.norm.unw=gafl.dv.unw.tab/(gafl.dv.nfish+0.00000001)
gafl.dv.w=gafl.dv.norm.unw*dv.state.land[,4]
# #florida handline
# fl.hl.unw=summaryBy(num~year+tl3cm,data=tip.hl[tip.hl$state=='FL',],FUN=sum)
# fl.hl.unw.tab=xtabs(num.sum~year+tl3cm,data=fl.hl.unw)
# fl.hl.unw.tab=as.data.frame.matrix(fl.hl.unw.tab)
# fl.hl.nfish=rowSums(fl.hl.unw.tab)
# for(i in 1:length(fl.hl.nfish)){
#   if (fl.hl.nfish[i]>st.cutoff){fl.hl.nfish[i]=fl.hl.nfish[i]
#                          } else{fl.hl.nfish[i]=0;fl.hl.unw.tab[i,]=0}
#   }
# fl.hl.norm.unw=fl.hl.unw.tab/(fl.hl.nfish+0.0000001)
# fl.hl.w=fl.hl.norm.unw*hl.state.land[,5]
#
# #florida diving
# fl.dv.unw=summaryBy(num~year+tl3cm,data=tip.dv[tip.dv$state=='FL',],FUN=sum)
# fl.dv.unw.tab=xtabs(num.sum~year+tl3cm,data=fl.dv.unw)
# fl.dv.unw.tab=as.data.frame.matrix(fl.dv.unw.tab)
# fl.dv.nfish=rowSums(fl.dv.unw.tab)
# for(i in 1:length(fl.dv.nfish)){
#   if (fl.dv.nfish[i]>st.cutoff){fl.dv.nfish[i]=fl.dv.nfish[i]
#                          } else{fl.dv.nfish[i]=0;fl.dv.unw.tab[i,]=0}
#   }
# fl.dv.norm.unw=fl.dv.unw.tab/(fl.dv.nfish+0.00000001)
# fl.dv.w=fl.dv.norm.unw*dv.state.land[,5]
#combine state comps
#handline
hl.w=nc.hl.w+sc.hl.w+gafl.hl.w
hl.norm.w=hl.w/rowSums(hl.w+0.0000001)
hl.norm.w.trim=hl.norm.w[rowSums(hl.norm.w)>0,]
hl.norm.unw.trim=hl.norm.unw[rowSums(hl.norm.w)>0,]
#trim to years greater than yr.cutoff
cull.yr=rownames()
#diving
dv.w=nc.dv.w+sc.dv.w+gafl.dv.w
dv.norm.w=dv.w/rowSums(dv.w+0.0000001)
dv.norm.w.trim=dv.norm.w[rowSums(dv.norm.w)>0,]
dv.norm.unw.trim=dv.norm.unw[rowSums(dv.norm.w)>0,]
#trim state comps to match combined comps for plotting
#handline
nc.hl.w.trim=nc.hl.w[rowSums(hl.norm.w)>0,]
sc.hl.w.trim=sc.hl.w[rowSums(hl.norm.w)>0,]
gafl.hl.w.trim=gafl.hl.w[rowSums(hl.norm.w)>0,]
#fl.hl.w.trim=fl.hl.w[rowSums(hl.norm.w)>0,]
#diving
nc.dv.w.trim=nc.dv.w[rowSums(dv.norm.w)>0,]
sc.dv.w.trim=sc.dv.w[rowSums(dv.norm.w)>0,]
gafl.dv.w.trim=gafl.dv.w[rowSums(dv.norm.w)>0,]
#fl.dv.w.trim=fl.dv.w[rowSums(dv.norm.w)>0,]
###############end of length comp weighting
#create sample size tables
#handlinernames=as.numeric(row.names(hl.norm.unw))
hl.ss=cbind(nc.hl.nfish,sc.hl.nfish,gafl.hl.nfish)
hl.ss=as.data.frame.matrix(hl.ss)
hl.ss$total=rowSums(hl.ss)
colnames(hl.ss)=c('NC','SC','GAFL','Total')
dv.ss=cbind(nc.dv.nfish,sc.dv.nfish,gafl.dv.nfish)
dv.ss=as.data.frame.matrix(dv.ss)
dv.ss$total=rowSums(dv.ss)
colnames(dv.ss)=c('NC','SC','GAFL','Total')
#trim to years greater than yr.cutoff
cull.yr=rownames(hl.ss)[hl.ss$Total>yr.cutoff]
cull.yr
dim(hl.norm.unw.trim)
hl.norm.unw.trim=hl.norm.unw.trim[rownmes(hl.norm.unw.trim)%in%cull.yr,]
hl.norm.unw.trim=hl.norm.unw.trim[rownames(hl.norm.unw.trim)%in%cull.yr,]
dim(hl.norm.unw.trim)
dim(dv.norm.unw.trim)
dv.norm.unw.trim=dv.norm.unw.trim[rownames(dv.norm.unw.trim)%in%cull.yr,]
dv.norm.w.trim=dv.norm.w.trim[rownames(dv.norm.w.trim)%in%cull.yr,]
dim(dv.norm.unw.trim)
dv.norm.unw.trim=dv.norm.unw.trim[rownames(dv.norm.unw.trim)%in%cull.yr.dv,]
dv.norm.w.trim=dv.norm.w.trim[rownames(dv.norm.w.trim)%in%cull.yr.dv,]
cull.yr.dv=rownames(dv.ss)[dv.ss$Total>yr.cutoff]
dv.norm.unw.trim=dv.norm.unw.trim[rownames(dv.norm.unw.trim)%in%cull.yr.dv,]
dv.norm.w.trim=dv.norm.w.trim[rownames(dv.norm.w.trim)%in%cull.yr.dv,]
dim(dv.norm.unw.trim)
dv.norm.w.out=cbind(hl.ss[rownames(hl.ss)%in%cull.yr.hl,],hl.norm.unw.trim)
cull.yr.hl=rownames(hl.ss)[hl.ss$Total>yr.cutoff]
hl.norm.w.out=cbind(hl.ss[rownames(hl.ss)%in%cull.yr.hl,],hl.norm.unw.trim)
head(hl.norm.w.out)
hl.norm.w.out=cbind(hl.ss$Total[rownames(hl.ss)%in%cull.yr.hl],hl.norm.unw.trim)
head(hl.norm.w.out)
colnames(hl.norm.w.out)=c("n",colnames(hl.norm.w.out))
colnames(hl.norm.w.out)=c("n",colnames(hl.norm.w.out)[-1])
head(hl.norm.w.out)
dv.norm.w.out=cbind(dv.ss$Total[rownames(dv.ss)%in%cull.yr.dv],dv.norm.unw.trim)
colnames(dv.norm.w.out)=c("n",colnames(dv.norm.w.out)[-1])
nc.hl.w.trim=nc.hl.w.trim[rownames(nc.hl.w.trim)%in%cull.yr.hl,]
#fl.hl.w.trim=fl.hl.w[rowSums(hl.norm.w)>0,]
#diving
nc.dv.w.trim=nc.dv.w.trim[rownames(nc.dv.w.trim)%in%cull.yr.dv,]
sc.dv.w.trim=sc.dv.w.trim[rownames(sc.dv.w.trim)%in%cull.yr.dv,]
gafl.dv.w.trim=gafl.dv.w.trim[rownames(gafl.dv.w.trim)%in%cull.yr.dv,]
?xtable
dim(hl.norm.w.out)
colnames(hl.norm.w.out)
length(colnames(hl.norm.w.out))
digits=c(0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4)
length(digits)
table1=xtable(hl.norm.w.out,digits=c(0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4))
print(table1,type="html")
table1=xtable(hl.norm.w.out,digits=c(0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4))
print(table1,type="html")
dim(acomp.hl.w.norm3)
source('~/.active-rstudio-document', echo=TRUE)
dim(acomp.hl.w.norm3)
digits=c(0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4)
length(digits)
rowSums(hl.norm.w)
hl.w=nc.hl.w+sc.hl.w+gafl.hl.w
rowSums(hl.w)
rowSums(dv.w)
dv.w=nc.dv.w+sc.dv.w+gafl.dv.w
dv.norm.w=dv.w/rowSums(dv.w)
dv.norm.w
source('~/.active-rstudio-document', echo=TRUE)
rowSums(acomp.hl.w.norm)
rowSums(dv.w.acomp)
rowSums(dv.acomp.w.norm)
rowSums(dv.acomp.norm.w)
dv.w.acomp=nc.dv.a.w+sc.dv.a.w+gafl.dv.a.w
dv.w.acomp.tr=dv.w.acomp[rowSums(dv.w.acomp)>0,]
dv.acomp.norm.w=dv.w.acom.tr/rowSums(dv.w.acomp.tr)
dv.acomp.norm.w=dv.w.acomp.tr/rowSums(dv.w.acomp.tr)
rowSums(dv.acomp.norm.w)
dv.unw.a=summaryBy(num~year+age,data=age.dv.all,FUN=sum)
dv.unw.a.tab=xtabs(num.sum~year+age,data=dv.unw.a)
dv.unw.a.tab=dv.unw.a.tab[rowSums(dv.unw.a.tab)>0,]
dv.nfish.a=rowSums(dv.unw.a.tab)+0.0000001
for(i in 1:length(dv.nfish.a)){
if (dv.nfish.a[i]>st.cutoff){dv.nfish.a[i]=dv.nfish.a[i]
} else{dv.nfish.a[i]=0.0000001;dv.unw.a.tab[i,]=0}
}
dv.norm.a.unw=dv.unw.a.tab/dv.nfish.a
nc.dv.a.unw=summaryBy(num~year+age,data=age.dv.all[age.dv.all$state=='NC',],FUN=sum)
nc.dv.a.unw.all=merge(a,nc.dv.a.unw,by=c('year','age'),all=TRUE)
nc.dv.a.unw.all$num.sum[is.na(nc.dv.a.unw.all$num.sum)==TRUE] = 0
nc.dv.a.unw.tab=xtabs(num.sum~year+age,data=nc.dv.a.unw.all)
nc.dv.a.unw.tab=as.data.frame.matrix(nc.dv.a.unw.tab)
nc.dv.a.nfish=rowSums(nc.dv.a.unw.tab)
for(i in 1:length(nc.dv.a.nfish)){
if (nc.dv.a.nfish[i]>st.cutoff){nc.dv.a.nfish[i]=nc.dv.a.nfish[i]
} else{nc.dv.a.nfish[i]=0;nc.dv.a.unw.tab[i,]=0}
}
nc.dv.a.norm.unw=nc.dv.a.unw.tab/(nc.dv.a.nfish+0.00000001)
nc.dv.a.w=nc.dv.a.norm.unw
for(i in 1:dim(nc.dv.a.norm.unw)[1]){
nc.dv.a.w[i,]=nc.dv.a.norm.unw[i,]*dv.state.land[dv.state.land$YEAR==as.numeric(rownames(nc.dv.a.norm.unw))[i],2]
}
#south carolina diving
sc.dv.a.unw=summaryBy(num~year+age,data=age.dv.all[age.dv.all$state=='SC',],FUN=sum)
sc.dv.a.unw.all=merge(a,sc.dv.a.unw,by=c('year','age'),all=TRUE)
sc.dv.a.unw.all$num.sum[is.na(sc.dv.a.unw.all$num.sum)==TRUE] = 0
sc.dv.a.unw.tab=xtabs(num.sum~year+age,data=sc.dv.a.unw.all)
sc.dv.a.unw.tab=as.data.frame.matrix(sc.dv.a.unw.tab)
sc.dv.a.nfish=rowSums(sc.dv.a.unw.tab)
for(i in 1:length(sc.dv.a.nfish)){
if (sc.dv.a.nfish[i]>st.cutoff){sc.dv.a.nfish[i]=sc.dv.a.nfish[i]
} else{sc.dv.a.nfish[i]=0;sc.dv.a.unw.tab[i,]=0}
}
sc.dv.a.norm.unw=sc.dv.a.unw.tab/(sc.dv.a.nfish+0.00000001)
sc.dv.a.w=sc.dv.a.norm.unw
for(i in 1:dim(sc.dv.a.norm.unw)[1]){
sc.dv.a.w[i,]=sc.dv.a.norm.unw[i,]*dv.state.land[dv.state.land$YEAR==as.numeric(rownames(sc.dv.a.norm.unw))[i],3]
}
#Georgia-Florida diving
gafl.dv.a.unw=summaryBy(num~year+age,data=age.dv.all[age.dv.all$state=='GAFL',],FUN=sum)
gafl.dv.a.unw.all=merge(a,gafl.dv.a.unw,by=c('year','age'),all=TRUE)
gafl.dv.a.unw.all$num.sum[is.na(gafl.dv.a.unw.all$num.sum)==TRUE] = 0
gafl.dv.a.unw.tab=xtabs(num.sum~year+age,data=gafl.dv.a.unw.all)
gafl.dv.a.unw.tab=as.data.frame.matrix(gafl.dv.a.unw.tab)
gafl.dv.a.nfish=rowSums(gafl.dv.a.unw.tab)
for(i in 1:length(gafl.dv.a.nfish)){
if (gafl.dv.a.nfish[i]>st.cutoff){gafl.dv.a.nfish[i]=gafl.dv.a.nfish[i]
} else{gafl.dv.a.nfish[i]=0;gafl.dv.a.unw.tab[i,]=0}
}
gafl.dv.a.norm.unw=gafl.dv.a.unw.tab/(gafl.dv.a.nfish+0.00000001)
gafl.dv.a.w=gafl.dv.a.norm.unw
for(i in 1:dim(gafl.dv.a.norm.unw)[1]){
gafl.dv.a.w[i,]=gafl.dv.a.norm.unw[i,]*dv.state.land[dv.state.land$YEAR==as.numeric(rownames(gafl.dv.a.norm.unw))[i],4]
}
dv.w.acomp=nc.dv.a.w+sc.dv.a.w+gafl.dv.a.w
dv.w.acomp.tr=dv.w.acomp[rowSums(dv.w.acomp)>0,]
dv.acomp.norm.w=dv.w.acomp.tr/rowSums(dv.w.acomp.tr)
dv.norm.a.unw.trim=dv.norm.a.unw[rowSums(dv.norm.a.unw)>0,]
dv.acomp.norm.w.trim2=dv.acomp.norm.w.trim[as.numeric(rownames(dv.acomp.norm.w.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
dv.norm.a.unw.trim2=dv.norm.a.unw.trim[as.numeric(rownames(dv.norm.a.unw.trim))%in%as.numeric(rownames(age.dv.ss[age.dv.ss$Total>cull.dv.ages,])),]
table8=xtable(dv.acomp.norm.w.trim3,digits=c(0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4))
print(table8,type="html")
source('~/.active-rstudio-document', echo=TRUE)
dim(dv.acomp.norm.w.trim3)
dim(dv.acomp.norm.w.trim)
dim(dv.acomp.norm.w.trim2)
table8=xtable(dv.acomp.norm.w.trim3,digits=c(0,0,rep(5,dim(dv.acomp.norm.w.trim3)[2]-1)))
print(table8,type="html")
